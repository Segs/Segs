CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(SEGS)
IF(CMAKE_CXX_COMPILER MATCHES cl.exe)
    add_definitions( -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS)
ELSE()
   SET(CMAKE_CXX_FLAGS "-Wall -std=c++0x"  )
ENDIF()
#SET(CMAKE_BUILD_TYPE Debug)
SET(MAIN_INCLUDE_PATH ${PROJECT_SOURCE_DIR}/3rd_party/include CACHE PATH "Includes")
SET(MAIN_LIB_PATH ${PROJECT_SOURCE_DIR}/3rd_party/lib CACHE PATH "Libraries")
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/out)

SET(CMAKE_INCLUDE_PATH ${MAIN_INCLUDE_PATH})
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeScripts;${CMAKE_MODULE_PATH})


INCLUDE(SEGS_Components)

add_definitions(-D__STDC_FORMAT_MACROS)


INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/common/include)
ADD_SUBDIRECTORY(Components)
ADD_SUBDIRECTORY(Projects)





